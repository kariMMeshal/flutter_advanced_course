# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
rules:
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - prefer_const_declarations
    - avoid_print # Prevent using `print` (use logs instead)
    # - prefer_single_quotes # Enforce single quotes for consistency
    - always_use_package_imports # Prevent relative imports
    - prefer_final_fields # Use `final` for class fields if they are not reassigned
    # - sort_constructors_first # Keep constructor at the top in a class
    - avoid_unnecessary_containers # Prevent unnecessary `Container` widgets
    - avoid_unused_constructor_parameters # Warn about unused parameters in constructors
    - prefer_interpolation_to_compose_strings # Use `'$var'` instead of `+` for strings
    - unnecessary_null_checks # Prevent redundant `!` null assertions
    - use_key_in_widget_constructors # Enforce using `Key` in widgets for better performance

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
